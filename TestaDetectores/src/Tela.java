
import detectores.*;
import java.awt.Cursor;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

public class Tela extends javax.swing.JFrame {

    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    String fonteDados;
    DetectorContext contexto;
    IDetector det1, det2, det3, det4, det5, det6, det7, det8, det9, det10;
    DecimalFormat formatadorPorcent;
    String tabelaEnderecos;
    long qtdeRegistros, qtdeProcessada, qtd_com_nulos;

    /** Creates new form Tela */
    public Tela() {
        initComponents();
        this.setTitle("Análise de Endereços");
        this.setLocationRelativeTo(null);
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception ex) {
        }
        this.setResizable(false);
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();

        //fonteDados = System.getProperty("user.dir") + "\\enderecos.xls";
        fonteDados = "z:\\enderecos.xls";
        tabelaEnderecos = "[Planilha1$]";

        lblFonteDados.setText(fonteDados);

        pbProgresso.setStringPainted(true);

        inicializaBiblioteca();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblQtdTotal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblQtdExcessoEspacos = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblQtdLetrasRepetidas = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblQtdNomesAcentuados = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblQtdTermosRepetidos = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblQtdNomesImproprios = new javax.swing.JLabel();
        pbProgresso = new javax.swing.JProgressBar();
        lblFonteDados = new javax.swing.JLabel();
        btnProcessar = new javax.swing.JButton();
        lblQtdEC_Invalidos = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblQtdEnderecos = new javax.swing.JLabel();
        lblQtdAnalisada = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblQtdComNulos = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblQtdEmIngles = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblQtdCaracEstranhos = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblQtdNomeNumeros = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblQtdMaFormacao = new javax.swing.JLabel();

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Com encontros consonantais suspeitos/inválidos:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Qtde de Endereços Analisados:");

        lblQtdTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdTotal.setText("0");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Com excesso de espaços:");

        lblQtdExcessoEspacos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdExcessoEspacos.setText("0");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Com letras repetidas:");

        lblQtdLetrasRepetidas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdLetrasRepetidas.setText("0");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Com nomes acentuados:");

        lblQtdNomesAcentuados.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdNomesAcentuados.setText("0");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Com termos repetidos:");

        lblQtdTermosRepetidos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdTermosRepetidos.setText("0");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Com nomes impróprios:");

        lblQtdNomesImproprios.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdNomesImproprios.setText("0");

        lblFonteDados.setText("?");

        btnProcessar.setMnemonic('P');
        btnProcessar.setText("Processar");
        btnProcessar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessarActionPerformed(evt);
            }
        });

        lblQtdEC_Invalidos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdEC_Invalidos.setText("0");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Qtde de Endereços:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Qtde Analisada:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Fonte de Dados:");

        lblQtdEnderecos.setText("0");

        lblQtdAnalisada.setText("0");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Com valores nulos:");

        lblQtdComNulos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdComNulos.setText("0");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Com termos em inglês:");

        lblQtdEmIngles.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdEmIngles.setText("0");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Com caracteres estranhos:");

        lblQtdCaracEstranhos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdCaracEstranhos.setText("0");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Com encontros consonantais suspeitos/inválidos:");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Com nomes e números concactenados:");

        lblQtdNomeNumeros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdNomeNumeros.setText("0");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Com má-formação:");

        lblQtdMaFormacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQtdMaFormacao.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblFonteDados, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(30, 30, 30)).addGroup(layout.createSequentialGroup().addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdEnderecos, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdEmIngles, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdAnalisada, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(pbProgresso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(lblQtdNomesAcentuados, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE).addComponent(lblQtdNomesImproprios, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE).addComponent(lblQtdTermosRepetidos, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE).addComponent(lblQtdLetrasRepetidas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE).addComponent(lblQtdExcessoEspacos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE).addComponent(lblQtdEC_Invalidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblQtdTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(lblQtdComNulos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnProcessar).addContainerGap()).addGroup(layout.createSequentialGroup().addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdCaracEstranhos, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(101, 101, 101)).addGroup(layout.createSequentialGroup().addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdNomeNumeros, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(101, 101, 101)).addGroup(layout.createSequentialGroup().addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lblQtdMaFormacao, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(101, 101, 101)))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(15, 15, 15).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblFonteDados)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(btnProcessar).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblQtdEnderecos)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblQtdAnalisada)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(pbProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(26, 26, 26).addComponent(jLabel4)).addGroup(layout.createSequentialGroup().addComponent(lblQtdTotal).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdEC_Invalidos).addComponent(jLabel15)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lblQtdExcessoEspacos).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdLetrasRepetidas).addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdNomesAcentuados).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdNomesImproprios).addComponent(jLabel12)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdTermosRepetidos).addComponent(jLabel10)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblQtdComNulos).addComponent(jLabel11)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel13).addComponent(lblQtdEmIngles)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel14).addComponent(lblQtdCaracEstranhos)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel16).addComponent(lblQtdNomeNumeros)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel17).addComponent(lblQtdMaFormacao)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessarActionPerformed
        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {
                iniciaAnalise();
            }
        });

        t.start();
    }

    private void iniciaAnalise() {
        this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        btnProcessar.setEnabled(false);

        if (!abreBanco()) {
            btnProcessar.setEnabled(true);
            this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            return;
        }

        inicializaAnalise();

        try {
            for (int i = 0; i < qtdeRegistros; i++) {
                rs.next();
                processaEndereco(rs.getString("ENDERECO"));
            }
        } catch (Exception e) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            fecharBanco();
        }

        apresentaResultados();

        btnProcessar.setEnabled(true);
        this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnProcessarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Tela().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcessar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblFonteDados;
    private javax.swing.JLabel lblQtdAnalisada;
    private javax.swing.JLabel lblQtdCaracEstranhos;
    private javax.swing.JLabel lblQtdComNulos;
    private javax.swing.JLabel lblQtdEC_Invalidos;
    private javax.swing.JLabel lblQtdEmIngles;
    private javax.swing.JLabel lblQtdEnderecos;
    private javax.swing.JLabel lblQtdExcessoEspacos;
    private javax.swing.JLabel lblQtdLetrasRepetidas;
    private javax.swing.JLabel lblQtdMaFormacao;
    private javax.swing.JLabel lblQtdNomeNumeros;
    private javax.swing.JLabel lblQtdNomesAcentuados;
    private javax.swing.JLabel lblQtdNomesImproprios;
    private javax.swing.JLabel lblQtdTermosRepetidos;
    private javax.swing.JLabel lblQtdTotal;
    private javax.swing.JProgressBar pbProgresso;
    // End of variables declaration//GEN-END:variables

    private boolean abreBanco() {
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro em forName: " + e.toString(), "Aviso", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        try {
            // Não usando DNS no ODBC do Windows (DNS-Less)
            String url = "jdbc:odbc:Driver={Microsoft Excel Driver (*.xls)};DBQ=" + fonteDados + "; readOnly = false";

            // Usando DNS no ODBC do Windows
            //String url = "jdbc:odbc:enderecos";
            conn = DriverManager.getConnection(url, "", "");

            stmt =
                    conn.createStatement();
            String query = "select * from " + tabelaEnderecos;
            rs = stmt.executeQuery(query);

            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e.toString(), "Aviso", JOptionPane.WARNING_MESSAGE);
            fecharBanco();

        }

        return false;
    }

    private void fecharBanco() {
        try {
            rs.close();
        } catch (Exception ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.close();
        } catch (Exception ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.close();
        } catch (Exception ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicializaBiblioteca() {
        det1 = new DetEncontrosConsonantaisInvalidos();
        det2 = new DetExcessoEspacos();
        det3 = new DetLetrasRepetidas();
        det4 = new DetNomesAcentuados();
        det5 = new DetNomesImproprios();
        det6 = new DetTermosRepetidos();
        det7 = new DetTermosIngles();
        det8 = new DetCaracEstranhos();
        det9 = new DetNomeNumeros();
        det10 = new DetMalFormados();

        contexto = new DetectorContext();
        contexto.adicionaDetector(det1);
        contexto.adicionaDetector(det2);
        contexto.adicionaDetector(det3);
        contexto.adicionaDetector(det4);
        contexto.adicionaDetector(det5);
        contexto.adicionaDetector(det6);
        contexto.adicionaDetector(det7);
        contexto.adicionaDetector(det8);
        contexto.adicionaDetector(det9);
        contexto.adicionaDetector(det10);

        formatadorPorcent = new DecimalFormat("#,##0.000%");
    }

    private void inicializaAnalise() {
        contexto.preparaNovaMedicao();

        qtdeProcessada = 0;
        //qtdeRegistros = obtemQtdeRegistros();
        qtdeRegistros = 20000;
        if (qtdeRegistros > 0) {
            pbProgresso.setMinimum(0);
            pbProgresso.setMaximum(100);
        }

        lblQtdEnderecos.setText(qtdeRegistros + "");
        lblQtdAnalisada.setText("0");

        lblQtdTotal.setText("0");
        lblQtdEC_Invalidos.setText("0");
        lblQtdExcessoEspacos.setText("0");
        lblQtdLetrasRepetidas.setText("0");
        lblQtdNomesAcentuados.setText("0");
        lblQtdNomesImproprios.setText("0");
        lblQtdTermosRepetidos.setText("0");
        lblQtdComNulos.setText("0");
        lblQtdEmIngles.setText("0");
        lblQtdCaracEstranhos.setText("0");
        lblQtdNomeNumeros.setText("0");
        lblQtdMaFormacao.setText("0");
    }

    private long obtemQtdeRegistros() {
        try {
            Statement st = conn.createStatement();
            ResultSet res = st.executeQuery("SELECT COUNT(*) FROM " + tabelaEnderecos);

            int qtde = 0;
            while (res.next()) {
                qtde = res.getInt(1);
            }

            return qtde;
        } catch (Exception e) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, e);
            return -1;
        }
    }

    private void processaEndereco(String endereco) {
        int ret = 0;
        if (endereco == null) {
            qtd_com_nulos++;
        } else {
            System.out.println(endereco);
            contexto.analisar(endereco);

            /*
            ret = det1.analisar(endereco);

            if (ret > 0) {
            //Logger.getLogger(Tela.class.getName()).log(Level.WARNING, endereco + ":" + det1.obterOcorrencias());

            System.out.println(endereco + " ---> " + det1.obterOcorrencias());
            }*/

        }

        lblQtdAnalisada.setText(++qtdeProcessada + "");

        double progresso = (double) qtdeProcessada / qtdeRegistros * 100;
        int valorBarra = (int) progresso;

        pbProgresso.setValue(valorBarra);
    }

    private void apresentaResultados() {
        long qtd_avaliados = contexto.obtemResultado(null) + qtd_com_nulos;
        long qtd_EC_invalido = contexto.obtemResultado(det1);
        long qtd_excesso_espacos = contexto.obtemResultado(det2);
        long qtd_letras_repetidas = contexto.obtemResultado(det3);
        long qtd_nomes_acentuados = contexto.obtemResultado(det4);
        long qtd_nomes_improprios = contexto.obtemResultado(det5);
        long qtd_termos_repetidos = contexto.obtemResultado(det6);
        long qtd_termos_ingles = contexto.obtemResultado(det7);
        long qtd_carac_estranhos = contexto.obtemResultado(det8);
        long qtd_nome_numeros = contexto.obtemResultado(det9);
        long qtd_ma_formacao = contexto.obtemResultado(det10);

        String texto = "<html><b>" + qtd_avaliados + "</b><html>";
        lblQtdTotal.setText(texto);

        texto = qtd_EC_invalido + " (" + porcentagem(qtd_EC_invalido, qtd_avaliados) + ")";
        lblQtdEC_Invalidos.setText(texto);

        texto = qtd_excesso_espacos + " (" + porcentagem(qtd_excesso_espacos, qtd_avaliados) + ")";
        lblQtdExcessoEspacos.setText(texto);

        texto = qtd_letras_repetidas + " (" + porcentagem(qtd_letras_repetidas, qtd_avaliados) + ")";
        lblQtdLetrasRepetidas.setText(texto);

        texto = qtd_nomes_acentuados + " (" + porcentagem(qtd_nomes_acentuados, qtd_avaliados) + ")";
        lblQtdNomesAcentuados.setText(texto);

        texto = qtd_nomes_improprios + " (" + porcentagem(qtd_nomes_improprios, qtd_avaliados) + ")";
        lblQtdNomesImproprios.setText(texto);

        texto = qtd_termos_repetidos + " (" + porcentagem(qtd_termos_repetidos, qtd_avaliados) + ")";
        lblQtdTermosRepetidos.setText(texto);

        texto = qtd_com_nulos + " (" + porcentagem(qtd_com_nulos, qtd_avaliados) + ")";
        lblQtdComNulos.setText(texto);

        texto = qtd_termos_ingles + " (" + porcentagem(qtd_termos_ingles, qtd_avaliados) + ")";
        lblQtdEmIngles.setText(texto);

        texto = qtd_carac_estranhos + " (" + porcentagem(qtd_carac_estranhos, qtd_avaliados) + ")";
        lblQtdCaracEstranhos.setText(texto);

        texto = qtd_nome_numeros + " (" + porcentagem(qtd_nome_numeros, qtd_avaliados) + ")";
        lblQtdNomeNumeros.setText(texto);

        texto = qtd_ma_formacao + " (" + porcentagem(qtd_ma_formacao, qtd_avaliados) + ")";
        lblQtdMaFormacao.setText(texto);
    }

    private String porcentagem(long valor, long maximo) {
        double porc = (double) valor / maximo;

        String valorFormatado = formatadorPorcent.format(porc);

        return valorFormatado;
    }
}
